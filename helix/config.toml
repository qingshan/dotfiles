theme = "onedark"

[editor]
line-number = "relative"
true-color = true
color-modes = true
auto-completion = false

[editor.lsp]
display-messages = true

[editor.statusline]
left = ["mode", "spinner", "file-name", "file-modification-indicator"]
center = []
right = ["diagnostics", "selections", "primary-selection-length", "position-percentage", "position"]

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.file-picker]
hidden = false

[editor.soft-wrap]
enable = true

[keys.insert]
up = "no_op"
down = "no_op"
left = "no_op"
right = "no_op"
pageup = "no_op"
pagedown = "no_op"
home = "no_op"
end = "no_op"

[keys.normal]
ret = ["insert_at_line_end", ":insert-output printf ';'", "normal_mode"]

[keys.normal.space]
i = ":toggle lsp.display-inlay-hints"

[keys.normal."A-\\"]
S = [":pipe ccase -t screamingsnake", "delete_char_forward"]
c = [":pipe ccase -t camel", "delete_char_forward"]
k = [":pipe ccase -t kebab", "delete_char_forward"]
K = [":pipe ccase -t upperkebab", "delete_char_forward"]
l = [":pipe ccase -t lower", "delete_char_forward"]
p = [":pipe ccase -t pascal", "delete_char_forward"]
s = [":pipe ccase -t snake", "delete_char_forward"]
u = [":pipe ccase -t upper", "delete_char_forward"]

[keys.normal."A-m"]
"A-1" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/# /'", "collapse_selection"]
"A-2" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/## /'", "collapse_selection"]
"A-3" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/### /'", "collapse_selection"]
"A-4" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/#### /'", "collapse_selection"]
"A-5" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/##### /'", "collapse_selection"]
"A-6" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/###### /'", "collapse_selection"]
"]" = ["extend_to_line_bounds", ":pipe sed -E 's/^#/##/'", "collapse_selection"]
"[" = ["extend_to_line_bounds", ":pipe sed -E 's/^##/#/'", "collapse_selection"]
c = ["extend_to_line_bounds", ":pipe helix-commands markdown code", "flip_selections", "collapse_selection", "goto_line_end"]
i = [":pipe helix-commands markdown italic"]
b = [":pipe helix-commands markdown bold"]
s = [":pipe helix-commands markdown strikethrough"]
k = [":pipe helix-commands markdown kbd"]
"`" = [":pipe helix-commands markdown backtick"]
h = [":pipe helix-commands markdown link"]
o = ["split_selection_on_newline", "goto_first_nonwhitespace", ":insert-output printf '1. '", "rotate_selections_backward", 'keep_primary_selection', "collapse_selection", "goto_line_end"]
q = ["split_selection_on_newline", "goto_first_nonwhitespace", ":insert-output printf '> '", "rotate_selections_backward", 'keep_primary_selection', "collapse_selection", "goto_line_end"]
u = ["split_selection_on_newline", "goto_first_nonwhitespace", ":insert-output printf -- '- '", "rotate_selections_backward", 'keep_primary_selection', "collapse_selection", "goto_line_end"]
t = ["split_selection_on_newline", "goto_first_nonwhitespace", ":insert-output printf -- '- [ ] '", "rotate_selections_backward", 'keep_primary_selection', "collapse_selection", "goto_line_end"]

[keys.insert."A-m"]
"A-1" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/# /'", "collapse_selection", "insert_at_line_end"]
"A-2" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/## /'", "collapse_selection", "insert_at_line_end"]
"A-3" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/### /'", "collapse_selection", "insert_at_line_end"]
"A-4" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/#### /'", "collapse_selection", "insert_at_line_end"]
"A-5" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/##### /'", "collapse_selection", "insert_at_line_end"]
"A-6" = ["extend_to_line_bounds", ":pipe sed -E 's/^(#{1,} )?/###### /'", "collapse_selection", "insert_at_line_end"]
"]" = ["extend_to_line_bounds", ":pipe sed -E 's/^#/##/'", "collapse_selection", "insert_at_line_end"]
"[" = ["extend_to_line_bounds", ":pipe sed -E 's/^##/#/'", "collapse_selection", "insert_at_line_end"]
c = [":insert-output echo '```'", ":insert-output echo '```'", "collapse_selection", "insert_at_line_end"]
i = ["collapse_selection", ":insert-output printf '**'", "flip_selections", "move_char_right", "insert_mode"]
b = ["collapse_selection", ":insert-output printf '****'", "flip_selections", "move_char_right", "move_char_right", "collapse_selection", "insert_mode"]
s = ["collapse_selection", ":insert-output printf '~~~~'", "flip_selections", "move_char_right", "move_char_right", "collapse_selection", "insert_mode"]
k = ["collapse_selection", ":insert-output printf '<kbd></kbd>'", "flip_selections", "move_char_right", "move_char_right", "move_char_right", "move_char_right", "move_char_right", "collapse_selection", "insert_mode"]
"`" = ["collapse_selection", ":insert-output printf '``'", "flip_selections", "move_char_right", "insert_mode"]
h = ["collapse_selection", ":insert-output printf '[]()'", "flip_selections", "move_char_right", "insert_mode"]
l = ["collapse_selection", ":insert-output printf '[[]]'", "flip_selections", "move_char_right", "move_char_right", "collapse_selection", "completion", "insert_mode"]
j = ["collapse_selection", ":insert-output printf '![](/images/)'", "flip_selections", "collapse_selection", "move_char_right", "move_char_right", "collapse_selection", "insert_mode"]
o = ["goto_first_nonwhitespace", ":insert-output printf -- '1. '", "collapse_selection", "insert_at_line_end"]
q = ["goto_first_nonwhitespace", ":insert-output printf -- '> '", "collapse_selection", "insert_at_line_end"]
u = ["goto_first_nonwhitespace", ":insert-output printf -- '- '", "collapse_selection", "insert_at_line_end"]
t = ["goto_first_nonwhitespace", ":insert-output printf -- '- [ ] '", "collapse_selection", "insert_at_line_end"]
