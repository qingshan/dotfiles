#!/usr/bin/env bash

directory="."
declare -a menu_items

while [[ $# -gt 0 ]]; do
  case $1 in
    -d|--directory)
      directory="$2"
      shift 2
      ;;
    -h|--help)
      # Print help
      echo "Usage: tmux-project -d [directory] [cmd] -- arguments".
      exit 0
      ;;
    --)
      shift
      break
      ;;
    -*|--*)
      echo "${0}: invalid option -- '${1}'"
      exit 1
      ;;
    *)
      positional_args+=("$1")
      shift
      ;;
  esac
done

cmd=${positional_args[0]}

function detect_file_type {
  file_name=$(echo $1 | awk -F ':' '{print $1}')
  if [[ $file_name = *.rs ]]; then
    echo "rust"
  elif [[ $file_name = *.go ]]; then
    echo "go"
  elif [[ $file_name = *.md ]]; then
    echo "markdown"
  fi
}

function detect_project {
  if [ -f $directory/Cargo.toml ] ; then
    echo "rust"
  elif [ -f $directory/go.mod ] ; then
    echo "go"
  elif [ -d $directory/.zk ] ; then
    echo "zk"
  elif [ -f $directory/justfile ] || [ -f $directory/Justfile ] ; then
    echo "just"
  elif [ -f $directory/Makefile ] ; then
    echo "make"
  fi
}

function build_commands {
  local project=$(detect_project)
  if [ ! -z "$project" ]; then
    $project-project all
  fi
}

function build_menu_items {
  local project=$(detect_project)
  local file_name=$(tmux-helix file)
  local file_type=$(detect_file_type $file_name)
  if [ "$file_type" = "markdown" ]; then
    menu_items+=('Preview File' 'p' 'run-shell "tmux-run -t right preview -- glow '$(echo $file_name | awk -F ':' '{print $1}')'"')
    menu_items+=('')
  fi
  case $project in
    rust)
      if [ "$file_type" = "rust" ]; then
        menu_items+=('Test Function' 'f' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' test-function '$file_name')"')
        menu_items+=('Test File' 'F' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' test-file '$file_name')"')
        menu_items+=('')
      fi
      menu_items+=('Test Package' 't' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' test-package '$file_name')"')
      menu_items+=('Test All' 'T' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' test-all)"')
      menu_items+=('Build Package' 'b' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' build-package '$file_name')"')
      menu_items+=('Build All' 'B' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' build-all)"')
      menu_items+=('Run Package' 'r' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' run-package '$file_name')"')
      menu_items+=('Run All' 'R' 'run-shell "tmux-run -t right test -- $(rust-project -d '$directory' run-all)"')
      menu_items+=('')
      ;;
    go)
      if [ $file_type = "go" ]; then
        menu_items+=('Test File' 'f' 'run-shell "tmux-run -t right test -- $(go-project -d '$directory' test-file '$file_name')"')
      fi
      menu_items+=('')
      menu_items+=('Test Package' 't' 'run-shell "tmux-run -t right test -- $(go-project -d '$directory' test-package '$file_name')"')
      menu_items+=('Test All' 'T' 'run-shell "tmux-run -t right test --$(go-project -d test-all)"')
      menu_items+=('Build File' 'b' 'run-shell "tmux-run -t right test -- $(go-project -d '$directory' build-file '$file_name')"')
      menu_items+=('Run File' 'r' 'run-shell "tmux-run -t right test -- $(go-project -d '$directory' run-file '$file_name')"')
      menu_items+=('')
      ;;
    just)
      menu_items+=('Build' 'b' 'run-shell "tmux-run -t right build -- just build"')
      menu_items+=('Run' 'r' 'run-shell "tmux-run -t right run -- just run"')
      menu_items+=('Test' 't' 'run-shell "tmux-run -t right test -- just test"')
      menu_items+=('')
      ;;
    make)
      menu_items+=('Build' 'b' 'run-shell "tmux-run -t right build -- make build"')
      menu_items+=('Run' 'r' 'run-shell "tmux-run -t right run -- make run"')
      menu_items+=('Test' 't' 'run-shell "tmux-run -t right test -- make test"')
      menu_items+=('')
      ;;
  esac
  menu_items+=('Lazygit' 'l' 'run-shell "tmux-run -t window lazygit"')
  menu_items+=('Htop' 'h' 'run-shell "tmux-run -t window htop"')
  menu_items+=('')
  menu_items+=('Journal' 'j' 'run-shell "tmux-run -t popup journal -- zk journal"')
  menu_items+=('Yue' 'y' 'run-shell "tmux-run -t top yue -- tmux-fortune"')
  menu_items+=('')
  menu_items+=('Clock' 'c' 'clock-mode')
  menu_items+=('Quit' 'q' '')
}

case $cmd in
  commands)
    build_commands | fzf --no-sort --prompt ' ' --pointer='➤ ' --marker='➤'
    ;;
  menu)
    build_menu_items
    tmux display-menu -x R -y P -T "#[align=centre fg=orange] Commands " "${menu_items[@]}"
    ;;
  *)
    echo "Unkown command: $cmd"
    ;;
esac
