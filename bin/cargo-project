#!/usr/bin/env bash

function cargo_packages() {
  cargo metadata -q --no-deps --format-version 1 \
      | jq -r ".packages[] | .name"
}

function cargo_targets() {
  cargo metadata -q --no-deps --format-version 1 \
        | jq -r '
        .workspace_members as $members | .packages
        | map(select(.id as $id | $members[] | contains($id) ))
        | map(.targets)[] | map(select(.kind[] | contains("example") or contains("test") or contains("bench")))[]
	| "--\(.kind[0]) \(.name)"
      '
}

function cargo_run_targets() {
  cargo metadata -q --no-deps --format-version 1 \
        | jq -r '
        .workspace_members as $members | .packages
        | map(select(.id as $id | $members[] | contains($id) ))
        | map(.targets)[] | map(select(.kind[] | contains("bin") or contains("example")))[]
	| "--\(.kind[0]) \(.name)"
      '
}

function cargo_tests() {
  cargo test -q -- --list --format=terse \
    | awk '/: test$/ { print substr($1, 1, length($1) - 1) }'
}

cmd="$1"
shift

if [[ $# -gt 0 ]]; then
  case $cmd in
    build-all)
      cmd="build"
      ;;
    test-all)
      cmd="test"
      ;;
  esac
  echo "cargo $cmd $@"
  exit 0
fi

case $cmd in
  build)
    cargo_packages | awk '{print "--package", $1}'
    cargo_targets
    ;;
  run)
    cargo_run_targets
    ;;
  test)
    cargo_packages | awk '{print "--package", $1}'
    cargo_targets
    cargo_tests | awk '{print "--", $1}'
    ;;
  build-all)
    echo "--all-targets"
    ;;
  test-all)
    echo "--all-targets"
    ;;
  *)
    exit 0
    ;;
esac
